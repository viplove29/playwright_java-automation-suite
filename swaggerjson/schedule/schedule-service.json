{"swagger":"2.0","info":{"description":"Service to manage triggering of single or recurring schedules","version":"1","title":"Schedule Service API"},"host":"api.dev.titan.v4af.com","basePath":"/schedule","tags":[{"name":"Schedule","description":"Manage Schedules"}],"paths":{"/schedule/v1/{productId}/{tenantId}/entities/{entityId}/schedules":{"post":{"tags":["Schedule"],"summary":"Create Schedule","description":"Create the Schedule specified within the body of this request. The created Schedule will be returned","operationId":"createScheduleUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":false,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":false,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":false,"type":"string"},{"in":"body","name":"newScheduleV1","description":"A new Schedule to be created","required":false,"schema":{"$ref":"#/definitions/ScheduleV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«ScheduleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/schedule/v1/{productId}/{tenantId}/entities/{entityId}/schedules/{id}":{"get":{"tags":["Schedule"],"summary":"Get Schedule by ID","description":"Retrieves a Schedule specified by the id provided","operationId":"getScheduleUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":false,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":false,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":false,"type":"string"},{"name":"id","in":"path","description":"ID of the Schedule to get","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ScheduleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Schedule"],"summary":"Replace Schedule","description":"Update the Schedule specified by the id provided in the URL. The updated Schedule will be returned","operationId":"replaceScheduleUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":false,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":false,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":false,"type":"string"},{"in":"body","name":"updatedScheduleV1","description":"An updated Schedule to replace the existing one","required":false,"schema":{"$ref":"#/definitions/ScheduleV1"}},{"name":"id","in":"path","description":"ID of the Schedule to update","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ScheduleV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["Schedule"],"summary":"Delete Schedule","description":"Delete the Schedule specified by the id provided in the URL","operationId":"deleteScheduleUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":false,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":false,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":false,"type":"string"},{"name":"id","in":"path","description":"ID of the Schedule to delete","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}},"patch":{"tags":["Schedule"],"summary":"Patch Schedule","description":"Update the Schedule specified by the id provided in the URL. The updated Schedule will be returned.","operationId":"patchScheduleUsingPATCH","consumes":["application/json-patch+json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":false,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":false,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":false,"type":"string"},{"in":"body","name":"patch","description":"Array of the Json Patch operations with path and value","required":false,"schema":{"$ref":"#/definitions/JsonPatch«ScheduleV1»"}},{"name":"id","in":"path","description":"ID of the Schedule to patch","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ScheduleV1»"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/schedule/v1/{productId}/{tenantId}/entities/{entityId}/schedules?filter=byName{&name}":{"get":{"tags":["Schedule"],"summary":"Get Schedule by name","description":"Retrieves a Schedule specified by the name provided","operationId":"findScheduleByNameUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":false,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":false,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":false,"type":"string"},{"name":"name","in":"query","description":"The schedule name to search by","required":true,"type":"string"},{"name":"filter","in":"query","required":true,"type":"string","default":"byName","enum":["byName"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ScheduleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}}},"definitions":{"EmptyResponseV1":{"type":"object","properties":{"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"ErrorResponseV1":{"type":"object","properties":{"message":{"type":"string"},"status":{"type":"integer","format":"int32"}}},"JsonNode":{"type":"object","properties":{"array":{"type":"boolean"},"bigDecimal":{"type":"boolean"},"bigInteger":{"type":"boolean"},"binary":{"type":"boolean"},"boolean":{"type":"boolean"},"containerNode":{"type":"boolean"},"double":{"type":"boolean"},"empty":{"type":"boolean"},"float":{"type":"boolean"},"floatingPointNumber":{"type":"boolean"},"int":{"type":"boolean"},"integralNumber":{"type":"boolean"},"long":{"type":"boolean"},"missingNode":{"type":"boolean"},"nodeType":{"type":"string","enum":["ARRAY","BINARY","BOOLEAN","MISSING","NULL","NUMBER","OBJECT","POJO","STRING"]},"null":{"type":"boolean"},"number":{"type":"boolean"},"object":{"type":"boolean"},"pojo":{"type":"boolean"},"short":{"type":"boolean"},"textual":{"type":"boolean"},"valueNode":{"type":"boolean"}}},"JsonPatch«ScheduleV1»":{"type":"object","description":"A JSON Patch (see http://jsonpatch.com/)"},"RecurrenceV1":{"type":"object","properties":{"cron":{"type":"string","description":"A valid spring cron string if type is CRON.\nA Cron expression consists of six sequential fields: \n```\nsecond, minute, hour, day of month, month, day(s) of week\n```\n\nNOTES:\n```\nsyntax            means                example                explanation\n------------------------------------------------------------------------------------\n*                 match any            \"* * * * * *\"          do always\n*/x               every x              \"*/5 * * * * *\"        do every five seconds\n?                 no specification     \"0 0 0 25 12 ?\"        do every Christmas Day\n\n```\nEXAMPLE:\n```\nsyntax                        means\n------------------------------------------------------------------------------------\n\"0 0 * * * *\"                 the top of every hour of every day.\n\"*/10 * * * * *\"              every ten seconds.\n\"0 0 8-10 * * *\"              8, 9 and 10 o'clock of every day.\n\"0 0/30 8-10 * * *\"           8:00, 8:30, 9:00, 9:30 and 10 o'clock every day.\n\"0 0 9-17 * * MON-FRI\"        on the hour nine-to-five weekdays\n\"0 0 0 25 12 ?\"               every Christmas Day at midnight\n```"},"delay":{"type":"integer","format":"int64","description":"Delay in milliseconds if type is FIXED_DELAY"},"type":{"type":"string","example":"ONCE","description":"The type of recurrence","enum":["ONCE","FIXED_DELAY","CRON"]}},"description":"This model describes Recurrence for a Schedule"},"ScheduleV1":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"Unique id of the Schedule","readOnly":true},"createdOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Schedule was created","readOnly":true},"updatedOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Schedule was last modified","readOnly":true},"content":{"description":"The content that will be provided when the Schedule is triggered","$ref":"#/definitions/JsonNode"},"name":{"type":"string","description":"The name of the Schedule"},"nextAttemptOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"Next instant when the Schedule will be triggered","readOnly":true},"recurrence":{"description":"Recurrence model for the schedule. Defaults to a Recurrence of Type ONCE","$ref":"#/definitions/RecurrenceV1"},"startOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"First instant when the Schedule is triggered. Defaults to current instant"}}},"SingleResponseV1«ScheduleV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/ScheduleV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}}}}