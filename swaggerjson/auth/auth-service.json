{"swagger":"2.0","info":{"description":"Authentication and Authorization","version":"1","title":"Authentication Service API"},"host":"api.dev.titan.v4af.com","basePath":"/auth","tags":[{"name":"Realm Management","description":"REST API for Realm Management"},{"name":"Groups","description":"REST API for Managing Groups"},{"name":"Service Roles","description":"REST API for Service Roles"},{"name":"Users","description":"REST API for Managing Users"},{"name":"Authentication","description":"REST API for User Authentication"},{"name":"Identity Provider","description":"REST API for Identity Provider Management"},{"name":"References","description":"REST API for Managing Entity Concordance"},{"name":"Products","description":"REST API for product Management"},{"name":"Authorization","description":"REST API for User Authorization"},{"name":"Authorization Groups","description":"REST API for Authorization Groups"},{"name":"Entities","description":"Entity Controller V 1"},{"name":"Authentication Settings","description":"REST API for Managing Groups"},{"name":"Roles","description":"REST API for Roles"},{"name":"Role Assignments","description":"REST API for User Roles"},{"name":"Tenants","description":"REST API for Tenant Management"},{"name":"Group Membership","description":"REST API for Managing Group Membership"}],"paths":{"/auth/v1/change-password":{"put":{"tags":["Authentication"],"summary":"Change a User's Password","description":"Update the password for a given AuthUser","operationId":"changePasswordUsingPUT","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"changePassword","description":"Payload that includes username, old password, and new password","required":false,"schema":{"$ref":"#/definitions/ChangePasswordRequestV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Public":[]}]}},"/auth/v1/token":{"post":{"tags":["Identity Provider"],"summary":"Get token","description":"Exchange a user name and password for a token","operationId":"getAccessTokenUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"idpUser","description":"The user we are getting the token for","required":false,"schema":{"$ref":"#/definitions/IDPUserV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«OAuthTokenV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Public":[]}]}},"/auth/v1/token/refresh":{"post":{"tags":["Identity Provider"],"summary":"Refresh token","description":"Exchange a refresh token for a new access token","operationId":"getRefreshTokenUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"refreshToken","description":"Refresh token","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«OAuthTokenV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"Public":[]}]}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/auth-info/services/{serviceName}":{"get":{"tags":["Authorization"],"summary":"Get the authorization information associated with the context of this request.  The entitlements returned can be used to enforce security in other services","description":"Retrieves the entitlements for the requesting user by the context provided.","operationId":"getContextualAuthUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"serviceName","in":"path","description":"The service to retrieve the entitlements for","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ContextualAuthInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/auth-tree/services/{serviceName}":{"get":{"tags":["Authorization"],"summary":"Get the authorization information for the user for the Tenant. The entitlements returned can be used to enforce security with User Interfaces and APIs, where they need to see the permissions you hold at ALL levels.","description":"Retrieves the entitlements for the requesting user by the context provided and all sub entities.","operationId":"getContextualAuthPreviewUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"serviceName","in":"path","description":"The service to retrieve the entitlements for","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ContextualAuthInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/authenticationsettings":{"get":{"tags":["Authentication Settings"],"summary":"Get Authentication Settings and/or computed values for provided Context","operationId":"getUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthenticationSettingsV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Authentication Settings"],"summary":"Create or Update Authentication Settings for provided Context","operationId":"createOrUpdateUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeUpdated","description":"AuthUser to be Updated","required":false,"schema":{"$ref":"#/definitions/AuthenticationSettingsV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthenticationSettingsV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities":{"post":{"tags":["Entities"],"summary":"Create Entity","description":"Create an Entity within the Context provided","operationId":"createEntityUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeCreated","description":"A new Entity to be created","required":false,"schema":{"$ref":"#/definitions/EntityV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«EntityV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities/{entityIdToDelete}{?migrateTo}":{"delete":{"tags":["Entities"],"summary":"Delete And Migrate Entity","description":"Delete an Entity and re-parents it's children to a parent specified in the request","operationId":"deleteAndMigrateEntityUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"entityIdToDelete","in":"path","description":"ID of Entity to delete","required":false,"type":"string"},{"name":"migrateTo","in":"query","description":"ID of Entity to migrate child data to","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities/{entityIdToDelete}{?requestParams}":{"delete":{"tags":["Entities"],"summary":"Delete Entity","description":"Delete an Entity specified by the Context provided","operationId":"deleteEntityUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"entityIdToDelete","in":"path","description":"ID of Entity to delete","required":false,"type":"string"},{"name":"requestParams","in":"query","description":"requestParams","required":true,"items":{"type":"object","additionalProperties":{"type":"string"}}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities/{entityIdToRetrieve}{?ancestor_levels,ancestor_properties,descendant_levels,descendant_properties,entity_type}":{"get":{"tags":["Entities"],"summary":"Get Entity Hierarchy","description":"Get an Entity and it's ancestors and descendants given the Context provided","operationId":"getEntityHierarchyUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"entityIdToRetrieve","in":"path","description":"ID of Entity to retrieve","required":false,"type":"string"},{"name":"ancestor_levels","in":"query","description":"Number of ancestors to include,  all includes all ancestors","required":false,"type":"string","default":"0"},{"name":"ancestor_properties","in":"query","description":"Ancestor properties to include","required":false,"type":"string","default":"summary","enum":["all","summary"]},{"name":"descendant_levels","in":"query","description":"Number of descendants to include,  all includes all descendants","required":false,"type":"string","default":"0"},{"name":"descendant_properties","in":"query","description":"Descendants properties to include","required":false,"type":"string","default":"summary","enum":["all","summary"]},{"name":"entity_type","in":"query","description":"Entity type to filter on","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","default":"CUSTOMER,AGENCY","enum":["CUSTOMER","AGENCY"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«EntityBranchV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities/{entityIdToWrite}":{"put":{"tags":["Entities"],"summary":"Create or update Entity","description":"Create or update an Entity specified by the Context provided","operationId":"createOrUpdateEntityUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"entityIdToWrite","in":"path","description":"ID of Entity to update/create","required":false,"type":"string"},{"in":"body","name":"toBeUpdated","description":"An Entity to be updated/created","required":false,"schema":{"$ref":"#/definitions/EntityV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«EntityV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities/{entityId}/references":{"post":{"tags":["References"],"summary":"Create EntityConcordance","description":"Create an EntityConcordance","operationId":"createEntityConcordanceUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeCreated","description":"A new EntityConcordance to be created","required":false,"schema":{"$ref":"#/definitions/EntityConcordanceV1"}},{"name":"entityId","in":"path","description":"ID of the Entity","required":false,"type":"string"}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«EntityConcordanceV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["References"],"summary":"Delete EntityConcordance","description":"Remove an EntityConcordance","operationId":"deleteEntityConcordanceUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeDeleted","description":"The EntityConcordance to be deleted","required":false,"schema":{"$ref":"#/definitions/EntityConcordanceV1"}},{"name":"entityId","in":"path","description":"ID of the Entity","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities/{entityId}/references{?pageSize,page}":{"get":{"tags":["References"],"summary":"Retrieves a list of EntityConcordances by Entity Id","description":"Retrieves a list of EntityConcordances by Entity Id","operationId":"getEntityConcordanceByEntityIdsUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"},{"name":"entityId","in":"path","description":"The Entity Id to search by","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«EntityConcordanceV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/entities?filter=byEntitlement{&entityIds,entitlement,userId}":{"get":{"tags":["Authorization"],"summary":"Determine whether user has the entitlement at the given entities.","description":"Returns a Map of Entity Ids with a boolean(True or False) depending on whether the specified user has the given entitlement or not.","operationId":"getEntityIdsForEntitlementUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"entityIds","in":"query","description":"List of Entities","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"entitlement","in":"query","description":"Entitlement to check","required":true,"type":"string"},{"name":"userId","in":"query","description":"User Id","required":true,"type":"string"},{"name":"filter","in":"query","required":true,"type":"string","default":"byEntitlement","enum":["byEntitlement"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«Map«string,boolean»»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/groups":{"post":{"tags":["Groups"],"summary":"Create AuthGroup","description":"Create an AuthGroup within the Context provided","operationId":"createAuthGroupUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeCreated","description":"A new AuthGroup to be created","required":false,"schema":{"$ref":"#/definitions/AuthGroupV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«AuthGroupV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/groups/{groupId}":{"get":{"tags":["Groups"],"summary":"Get AuthGroup","description":"Retrieves an AuthGroup","operationId":"getAuthGroupUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"ID of the AuthGroup","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthGroupV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Groups"],"summary":"Update or Create AuthGroup","description":"Update or Create an AuthGroup specified by the Context provided","operationId":"createOrUpdateAuthGroupUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"ID of the AuthGroup","required":false,"type":"string"},{"in":"body","name":"toBeUpdated","description":"An AuthGroup to be updated or created","required":false,"schema":{"$ref":"#/definitions/AuthGroupV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthGroupV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["Groups"],"summary":"Delete AuthGroup","description":"Delete an AuthGroup specified by the Context provided","operationId":"deleteAuthGroupUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"ID of AuthGroup to delete","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/groups/{groupId}/roles/{roleId}":{"post":{"tags":["Authorization Groups"],"summary":"Assign a Role to a Group","description":"Assigns a Role to an AuthGroupV1 specified by the Context provided","operationId":"grantRoleUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"groupId","required":false,"type":"string"},{"name":"roleId","in":"path","description":"roleId","required":false,"type":"string"},{"in":"body","name":"authGroupRoleAssignmentV1","description":"A new Auth Group Role Assignment to be created","required":false,"schema":{"$ref":"#/definitions/AuthGroupRoleAssignmentV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«AuthGroupRoleAssignmentV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["Authorization Groups"],"summary":"Revoke a Role from a Group","description":"Revokes a Role from an AuthGroupV1 specified by the Context provided","operationId":"revokeRoleFromUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"groupId","required":false,"type":"string"},{"name":"roleId","in":"path","description":"roleId","required":false,"type":"string"},{"in":"body","name":"authGroupRoleAssignmentV1","description":"An Auth Group Role Assignment to be deleted","required":false,"schema":{"$ref":"#/definitions/AuthGroupRoleAssignmentV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/groups/{groupId}/roles{?pageSize,page}":{"get":{"tags":["Authorization Groups"],"summary":"List Role assignments for an AuthGroup in a Context","description":"Returns Paged AuthGroupRoleAssignmentV1 for the specified Group given the Context provided","operationId":"findRolesForGroupUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"groupId","required":false,"type":"string"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«AuthGroupRoleAssignmentV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/groups/{groupId}/users/{userId}":{"post":{"tags":["Group Membership"],"summary":"Assign an AuthUser to an AuthGroup","description":"Assigns an AuthUser to an AuthGroup in the Context provided","operationId":"addAuthUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"Id of the AuthUser","required":false,"type":"string"},{"name":"groupId","in":"path","description":"Id of the AuthGroup","required":false,"type":"string"}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«AuthGroupMembershipV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["Group Membership"],"summary":"Remove an AuthUser from an AuthGroup","description":"Removes an AuthUser from an AuthGroup specified by the Context provided","operationId":"revokeAuthUserFromUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"Id of the AuthGroup","required":false,"type":"string"},{"name":"userId","in":"path","description":"Id of the AuthUser","required":false,"type":"string"},{"in":"body","name":"authGroupMembershipV1","description":"authGroupMembershipV1","required":true,"schema":{"$ref":"#/definitions/AuthGroupMembershipV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/groups/{groupId}/users{?pageSize,page}":{"get":{"tags":["Group Membership"],"summary":"List AuthUser membership for the specified AuthGroup in a Context","description":"Returns Paged AuthGroupMembershipV1s for the specified AuthGroup given the Context provided","operationId":"findAuthUserMembershipsInAuthGroupUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"groupId","in":"path","description":"Id of the AuthGroup","required":false,"type":"string"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«AuthGroupMembershipV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/groups{?pageSize,page}":{"get":{"tags":["Groups"],"summary":"Get AuthGroups","description":"Retrieves all AuthGroups for given Context","operationId":"getAuthGroupUsingGET_1","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«AuthGroupV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/products/{productIdToCreate}":{"put":{"tags":["Products"],"summary":"Create Product","description":"Create a Product","operationId":"createProductUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"productIdToCreate","in":"path","description":"ID of the Product","required":false,"type":"string"},{"in":"body","name":"toBeCreated","description":"A new Product to be created","required":false,"schema":{"$ref":"#/definitions/ProductV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«ProductV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/products/{productIdToRetrieve}":{"get":{"tags":["Products"],"summary":"Get Product","description":"Retrieves a Product by ID","operationId":"getProductUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"productIdToRetrieve","in":"path","description":"ID of the Product","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ProductV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/products?filter=byIds{&ids,pageSize,page,internal}":{"get":{"tags":["Products"],"summary":"Retrieve Products by Ids","description":"Retrieves Products using provided ids","operationId":"getProductsByIdsUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"ids","in":"query","description":"The ids to search by","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","required":true,"type":"string","default":"byIds","enum":["byIds"]},{"name":"internal","in":"query","description":"internal","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«ProductV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/products?filter=byName{&name}":{"get":{"tags":["Products"],"summary":"Get Product","description":"Retrieves a Product by name","operationId":"getProductByNameUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"name","in":"query","description":"Name of the Product","required":false,"type":"string"},{"name":"filter","in":"query","required":true,"type":"string","default":"byName","enum":["byName"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ProductV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/realms":{"post":{"tags":["Realm Management"],"summary":"Create Realm","description":"Create the Realm specified within the body of this request.  The created Realm will be returned.","operationId":"createRealmUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"newRealmV1","description":"A new Realm to be created","required":false,"schema":{"$ref":"#/definitions/RealmV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«RealmV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/realms/{name}":{"get":{"tags":["Realm Management"],"summary":"Get Realm","description":"Retrieves the Realm specified by the id provided.","operationId":"getRealmUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"name","in":"path","description":"ID of the Realm to get","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«RealmV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Realm Management"],"summary":"Replace Realm","description":"Update the Realm specified by the id provided in the URL. The updated Realm will be returned.","operationId":"updateRealmUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"name","in":"path","description":"Name of the Realm to replace","required":false,"type":"string"},{"in":"body","name":"newRealmV1","description":"A Realm to replace the existing Realm","required":false,"schema":{"$ref":"#/definitions/RealmV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«RealmV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["Realm Management"],"summary":"Delete a Realm","description":"Deletes the Realm specified by the id provided.","operationId":"deleteRealmUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"name","in":"path","description":"Name of the Realm to delete","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/role-assignments":{"post":{"tags":["Role Assignments"],"summary":"Assign a Role to a User","description":"Assigns a Role to an AuthUserV1 specified by the Context provided","operationId":"grantRoleUsingPOST_1","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"authUserRoleAssignmentV1","description":"A new AuthUserRoleAssignmentV1 to be created","required":false,"schema":{"$ref":"#/definitions/AuthUserRoleAssignmentV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserRoleAssignmentV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["Role Assignments"],"summary":"Revoke a Role from a User","description":"Revokes a Role from an AuthUserV1 specified by the Context provided","operationId":"revokeRoleFromUsingDELETE_1","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"authUserRoleAssignmentV1","description":"An AuthUserRoleAssignmentV1 to be deleted","required":false,"schema":{"$ref":"#/definitions/AuthUserRoleAssignmentV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/role-assignments/bulk":{"post":{"tags":["Role Assignments"],"summary":"Assign a Role to multiple Users","description":"Assigns a Role to multiple AuthUserV1s specified by the Context provided","operationId":"bulkGrantRoleUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"authUserRoleAssignmentV1","description":"A new AuthUserRoleAssignmentV1 to be created","required":false,"schema":{"$ref":"#/definitions/AuthUserRoleAssignmentV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«List»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/role-assignments?filter=byUserId{&userId,pageSize,page}":{"get":{"tags":["Role Assignments"],"summary":"List Role Assignments for a User in a Context","description":"Returns Paged AuthUserRoleAssignmentV1 for the specified User given the Context provided","operationId":"findRolesForUserUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"query","description":"Id of the User","required":false,"type":"string"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","required":true,"type":"string","default":"byUserId","enum":["byUserId"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«AuthUserRoleAssignmentV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/roles":{"post":{"tags":["Roles"],"summary":"Create Role","description":"Create the Role specified within the body of this request.  The created Role will be returned with a map of its related Roles and Service Roles.","operationId":"createRoleUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"newRoleV1","description":"A new Role to be created","required":false,"schema":{"$ref":"#/definitions/RoleV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseWithRelatedObjectsV1«RoleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/roles/{id}":{"get":{"tags":["Roles"],"summary":"Get Role By ID","description":"Retrieves the Role specified by the provided id with a map of its related Roles and Service Roles.","operationId":"getRoleUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"id","in":"path","description":"ID of the Role to be retrieved","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseWithRelatedObjectsV1«RoleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Roles"],"summary":"Replace Role","description":"Update the Role specified by the id provided in the URL. The updated Role will be returned with a map of its related Roles and Service Roles.","operationId":"updateRoleUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"id","in":"path","description":"ID of the Role to replace","required":false,"type":"string"},{"in":"body","name":"newRoleV1","description":"A Role to replace the existing Role","required":false,"schema":{"$ref":"#/definitions/RoleV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseWithRelatedObjectsV1«RoleV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["Roles"],"summary":"Delete a Role","description":"Deletes the Role specified by the provided id.","operationId":"deleteRoleUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"id","in":"path","description":"ID of the Role to delete","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/roles/{id}?lookupBy=id":{"get":{"tags":["Roles"],"summary":"Get Role By ID Lookup By ID","description":"Retrieves the Role specified by the provided id with a map of its related Roles and Service Roles.","operationId":"getRoleLookupByIdUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"id","in":"path","description":"ID of the Role to be retrieved","required":false,"type":"string"},{"name":"lookupBy","in":"query","required":true,"type":"string","default":"id","enum":["id"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseWithRelatedObjectsV1«RoleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/roles/{name}?lookupBy=name":{"get":{"tags":["Roles"],"summary":"Get Role by Name Lookup By Name","description":"Retrieves a Role by the provide name with a map of its related Roles and Service Roles.","operationId":"getRoleByNameUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"name","in":"path","description":"The Name to search by","required":false,"type":"string"},{"name":"lookupBy","in":"query","required":true,"type":"string","default":"name","enum":["name"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseWithRelatedObjectsV1«RoleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":true}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/roles?filter=byIds{&ids,pageSize,page}":{"get":{"tags":["Roles"],"summary":"Retrieve lots of Roles by id","description":"Retrieves the page of Roles specified by the provided ids with a map of their related Roles and Service Roles.","operationId":"findRoleByIdsUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"ids","in":"query","description":"The list of ids to search by","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","required":true,"type":"string","default":"byIds","enum":["byIds"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseWithRelatedObjectsV1«RoleV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/roles?filter=byName{&name}":{"get":{"tags":["Roles"],"summary":"Get Role by Name","description":"Retrieves a Role by the provided name with a map of its related Roles and Service Roles.","operationId":"findRoleByNameUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"name","in":"query","description":"The Name to search by","required":true,"type":"string"},{"name":"filter","in":"query","required":true,"type":"string","default":"byName","enum":["byName"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseWithRelatedObjectsV1«RoleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/services/{serviceName}/roles":{"get":{"tags":["Service Roles"],"summary":"Find All By Service Name","description":"Retrieves ServiceRoles for a given Service Name","operationId":"findAllServiceRolesForServiceUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"serviceName","in":"path","description":"Name of the service the ServiceRole belongs to.","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«List«ServiceRoleV1»»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Service Roles"],"summary":"Create or update a List of Roles","description":"Replaces if the Role exists, otherwise will Insert the Role.","operationId":"saveAllUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"serviceName","in":"path","description":"serviceName","required":false,"type":"string"},{"in":"body","name":"serviceRoleV1s","description":"A list of Roles","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/ServiceRoleV1"}}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«List«ServiceRoleV1»»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/services/{serviceName}/roles/{name}":{"get":{"tags":["Service Roles"],"summary":"Find ServiceRole","description":"Retrieves a ServiceRole specified by the Name","operationId":"getRoleUsingGET_1","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"serviceName","in":"path","description":"Name of the service the ServiceRole belongs to.","required":false,"type":"string"},{"name":"name","in":"path","description":"Name of the ServiceRole to get","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«ServiceRoleV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/tenants/{tenantIdToActivate}/activate":{"put":{"tags":["Tenants"],"summary":"Activate an entity","operationId":"activateTenantUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"tenantIdToActivate","in":"path","description":"ID of the Tenant to activate","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/tenants/{tenantIdToDeactivate}/deactivate":{"put":{"tags":["Tenants"],"summary":"Deactivate an entity","operationId":"deactivateTenantUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"tenantIdToDeactivate","in":"path","description":"ID of the Tenant to deactivate","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/tenants/{tenantIdToDelete}":{"delete":{"tags":["Tenants"],"summary":"Delete Tenant","description":"Delete a Tenant specified by the Context provided","operationId":"deleteTenantUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"tenantIdToDelete","in":"path","description":"ID of the Tenant to delete","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/tenants/{tenantIdToModify}":{"put":{"tags":["Tenants"],"summary":"Create or Update Tenant","description":"Update a Tenant specified by the Context provided or Create a Tenant if onedoes not exist.","operationId":"createOrUpdateTenantUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"tenantIdToModify","in":"path","description":"ID of the tenant","required":false,"type":"string"},{"in":"body","name":"tenantToUpdate","description":"A new Tenant to be updated","required":false,"schema":{"$ref":"#/definitions/EntityV1"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«EntityV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/tenants/{tenantIdToRetrieve}":{"get":{"tags":["Tenants"],"summary":"Get Tenant","description":"Get a Tenant specified by the Context provided","operationId":"getTenantUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"tenantIdToRetrieve","in":"path","description":"ID of the Parent Tenant (VERTAFORE), providing Context for this Tenant","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«EntityV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users":{"post":{"tags":["Users"],"summary":"Create a User","description":"Create a AuthUserV1 within the Context provided","operationId":"createUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeCreated","description":"A new AuthUserV1 to be created","required":false,"schema":{"$ref":"#/definitions/AuthUserV1"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/activate/bulk{?userIds}":{"post":{"tags":["Users"],"summary":"Activate Users in Bulk","description":"Activates AuthUserV1s in the specified Context","operationId":"bulkActivateUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userIds","in":"query","description":"Ids of the Users","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«Map«string,string»»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/assigned-role-count?filter=byRoleIds{&roleIds,activeFilter}":{"get":{"tags":["Users"],"summary":"Get number of users who are assigned any role in the list","description":"Get number of users in context by role assignment","operationId":"getAssignedRoleCountUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"roleIds","in":"query","description":"RoleIds that will be used to search for user role assignments","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"activeFilter","in":"query","description":"Filter on status","required":false,"type":"string","default":"all","enum":["true","false","all"]},{"name":"filter","in":"query","required":true,"type":"string","default":"byRoleIds","enum":["byRoleIds"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AssignedRoleCountV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/assigned-roles?filter=byAssignedRoles{&roleIds,activeFilter,entityIds,userIds,displayName,sortDirection,pageSize,page}":{"get":{"tags":["Users"],"summary":"Get a list of users who are assigned any role","description":"Get list of AuthUserV1 by role assignment","operationId":"getUsersByAssignedRolesUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"roleIds","in":"query","description":"RoleIds that will be used to search for user role assignments","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"activeFilter","in":"query","description":"Filter on status","required":false,"type":"string","default":"all","enum":["true","false","all"]},{"name":"entityIds","in":"query","description":"entityIds","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"userIds","in":"query","description":"userIds","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"displayName","in":"query","description":"displayName","required":false,"type":"string"},{"name":"sortDirection","in":"query","description":"Sort by direction","required":false,"type":"string","default":"asc","enum":["asc","desc"]},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","required":true,"type":"string","default":"byAssignedRoles","enum":["byAssignedRoles"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«UserAndAssignedRolesV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/bulk":{"post":{"tags":["Users"],"summary":"Create bulk Users","description":"Create many AuthUserV1 within the Context provided","operationId":"bulkCreateUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeCreated","description":"List of new AuthUserV1s to be created","required":false,"schema":{"type":"array","items":{"$ref":"#/definitions/AuthUserV1"}}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«Map«string,string»»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/bulk{?userIds}":{"delete":{"tags":["Users"],"summary":"Delete multiple Users","description":"Bulk delete AuthUserV1 records specified by the Context provided","operationId":"bulkDeleteUserUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userIds","in":"query","description":"userIds","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«List»"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/deactivate/bulk{?userIds}":{"post":{"tags":["Users"],"summary":"Deactivate a User","description":"Deactivates a AuthUserV1 specified by the Context provided","operationId":"bulkDeactivateUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userIds","in":"query","description":"Ids of the Users","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«Map«string,string»»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/lastlogintimes?filter=byIds{&ids}":{"get":{"tags":["Users"],"summary":"Retrieve Users last login time by Ids","description":"Retrieves Users last login time using provided ids","operationId":"getUsersLastLoginTimesByIdsUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"ids","in":"query","description":"The ids to search by","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"filter","in":"query","required":true,"type":"string","default":"byIds","enum":["byIds"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«List«IDPUserMetaDataV1»»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/{userId}":{"get":{"tags":["Users"],"summary":"Get a User","description":"Get an AuthUserV1 by their ID","operationId":"getUserUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"Id of the User","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Users"],"summary":"Update a User","description":"Update a AuthUserV1 specified by the Context provided","operationId":"updateUserUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"toBeUpdated","description":"AuthUser to be Updated","required":false,"schema":{"$ref":"#/definitions/AuthUserV1"}},{"name":"userId","in":"path","description":"userId","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"patch":{"tags":["Users"],"summary":"Patch Auth User","description":"Patch the AuthUserV1 specified by the id provided in the URL. The updated AuthUserV1 will be returned.","operationId":"patchUpdateUserUsingPATCH","consumes":["application/json-patch+json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"ID of the User to update","required":false,"type":"string"},{"in":"body","name":"jsonPatch","description":"A JSON Patch to update an existing User","required":false,"schema":{"$ref":"#/definitions/JsonPatch«PatchableAuthUserV1»"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserV1»"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/{userId}/activate":{"post":{"tags":["Users"],"summary":"Activate a User","description":"Activates a AuthUserV1 specified by the Context provided","operationId":"activateUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"Id of the User","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/{userId}/deactivate":{"post":{"tags":["Users"],"summary":"Deactivate Users","description":"Deactivates AuthUserV1s specified by the Context provided","operationId":"deactivateUserUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"Id of the User","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserV1»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/{userId}/device-reset":{"post":{"tags":["Users"],"summary":"Reset User MFA Devices","description":"removes any MFA devices from user so they will have to re-provision next time they need MFA","operationId":"deviceResetUsingPOST","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"Id of the User","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/{userId}/secret":{"get":{"tags":["Users"],"summary":"Get a Client Credentials Service User Secret","description":"Get a Secret by its name","operationId":"getUserSecretUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"User Id of the Service User","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserSecretV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["Users"],"summary":"Update a Client Credentials Service User Secret","description":"Update a Secret by its name","operationId":"updateUserSecretUsingPUT","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"in":"body","name":"secret","description":"Service User secret to be Updated","required":false,"schema":{"$ref":"#/definitions/AuthUserSecretV1"}},{"name":"userId","in":"path","description":"userId","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users/{userId}{?cascade}":{"delete":{"tags":["Users"],"summary":"Delete a User","description":"Delete a AuthUserV1 specified by the Context provided","operationId":"deleteUserUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"userId","in":"path","description":"Id of the User","required":false,"type":"string"},{"name":"cascade","in":"query","description":"Optional flag to delete user in Descendant contexts","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/EmptyResponseV1"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users?filter=byIds{&ids,pageSize,page}":{"get":{"tags":["Users"],"summary":"Retrieve Users by Ids","description":"Retrieves Users using provided ids","operationId":"getUsersByIdsUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"ids","in":"query","description":"The ids to search by","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","required":true,"type":"string","default":"byIds","enum":["byIds"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«AuthUserV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users?filter=byScope{&scope,userOrDisplayNameIncludes,sortBy,sortDirection,activeFilter,pageSize,page}":{"get":{"tags":["Users"],"summary":"Retrieve Users for a given Context","description":"Retrieve Users using provided context, scope, and name term","operationId":"getUsersByContextUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"scope","in":"query","description":"Context scope","required":false,"type":"string","default":"request","enum":["request","descendants","ancestors"]},{"name":"userOrDisplayNameIncludes","in":"query","description":"Allows to search users by username or displayName(full or partial match)","required":false,"type":"string"},{"name":"sortBy","in":"query","description":"Sort by","required":false,"type":"string","default":"displayName","enum":["displayName","username","active"]},{"name":"sortDirection","in":"query","description":"Sort by direction","required":false,"type":"string","default":"asc","enum":["asc","desc"]},{"name":"activeFilter","in":"query","description":"Filter on status","required":false,"type":"string","default":"all","enum":["true","false","all"]},{"name":"pageSize","in":"query","description":"The maximum number of items to include in the response","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","description":"The page of items to retrieve","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","required":true,"type":"string","default":"byScope","enum":["byScope"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PagedResponseV1«AuthUserV1,LimitOffsetPagingInfoV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/auth/v1/{productId}/{tenantId}/entities/{entityId}/users{?withUsername,inRealm}":{"get":{"tags":["Users"],"summary":"Get a User","description":"Get an AuthUserV1 by their username","operationId":"getUserByUsernameUsingGET","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"productId","in":"path","description":"ID of the product for which the request is being made","required":true,"type":"string"},{"name":"tenantId","in":"path","description":"ID of the tenant for which the request is being made","required":true,"type":"string"},{"name":"entityId","in":"path","description":"ID of the entity for which the request is being made","required":true,"type":"string"},{"name":"withUsername","in":"query","description":"Username of the user","required":false,"type":"string"},{"name":"inRealm","in":"query","description":"Optional Realm to find users of other realms","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SingleResponseV1«AuthUserV1»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}}},"definitions":{"AddressV1":{"type":"object","properties":{"country":{"type":"string","example":"US","description":"The country name component. When specified, the value MUST be in ISO 3166-1 'alpha-2' code format [ISO3166]"},"formatted":{"type":"string","example":"100 Universal City Plaza\nHollywood, CA 91608 USA","description":"The full mailing address, formatted for display or use with a mailing label. This attribute MAY contain newlines."},"locality":{"type":"string","example":"Hollywood","description":"The city or locality component."},"mailing":{"type":"boolean","example":true,"description":"Indicates a mailing Address"},"postalCode":{"type":"string","example":"91608","description":"The zip code or postal code component."},"preferred":{"type":"boolean","example":true,"description":"Indicates a preferred Address"},"region":{"type":"string","example":"CA","description":"The state, province or region component. Administrative division, within a country; a state or province."},"streetAddress":{"type":"string","example":"100 Universal City Plaza","description":"The main street address component, which may include house number, street name, P.O. box."},"streetAddress2":{"type":"string","example":"#201","description":"The second line of a full address. The unit, apartment, building, etc. any secondary address component."},"subregion":{"type":"string","example":"Alameda","description":"The county or subregion component."},"type":{"type":"string","example":"Business Address","description":"Type of Address"}},"description":"Standard Address"},"AssignedRoleCountV1":{"type":"object","required":["entityId","roleIds","tenantId","userStatus"],"properties":{"tenantId":{"type":"string","example":"exampleTenant","description":"Id of tenant context for users assigned roles that are included in the count","readOnly":true},"entityId":{"type":"string","example":"exampleEntityId","description":"Id of entity context for users assigned roles that are included in the count","readOnly":true},"roleIds":{"type":"array","example":"['UUID1', 'UUID2']","description":"Role ids included in the count","items":{"type":"string"}},"userStatus":{"type":"string","example":"true","description":"Status of users to include, true for only active users, false for only inactive user and all for all "},"assignedRoleCount":{"type":"integer","format":"int32","description":"Number of assigned roles","readOnly":true}}},"AttributeV1":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string","example":"Ethnicity","description":"Key of the attribute, representing the title or name of the field"},"value":{"type":"string","example":"Hispanic","description":"Value of the key for this attribute"}}},"AuthGroupMembershipV1":{"type":"object","properties":{"userId":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"ID of the AuthUser","readOnly":true},"productId":{"type":"string","description":"Product ID assignment context in which the AuthUser has membership in the AuthGroup.","readOnly":true},"tenantId":{"type":"string","description":"Tenant ID assignment context in which the AuthUser has membership in the AuthGroup.","readOnly":true},"entityId":{"type":"string","description":"Entity ID assignment context in which the AuthUser has membership in the AuthGroup.","readOnly":true},"authGroupContextualId":{"description":"Product, Tenant, Entity, ID of the AuthGroup","readOnly":true,"$ref":"#/definitions/ProductContextualIdV1"},"authGroupMembershipSource":{"type":"string","example":"UNFEDERATED","description":"Source of the AuthUser's Membership to the AuthGroup","readOnly":true,"enum":["federated","unfederated"]}}},"AuthGroupRoleAssignmentV1":{"type":"object","properties":{"roleContextualId":{"description":"Product, Tenant, Entity, ID of the Role","$ref":"#/definitions/ProductContextualIdV1"},"authGroupContextualId":{"description":"Product, Tenant, Entity, ID of the AuthGroup","$ref":"#/definitions/ProductContextualIdV1"},"productId":{"type":"string","description":"Product ID assignment context in which the Role is assigned to the AuthGroup."},"tenantId":{"type":"string","description":"Tenant ID assignment context in which the Role is assigned to the AuthGroup."},"entityId":{"type":"string","description":"Entity ID assignment context in which the Role is assigned to the AuthGroup."},"createdOn":{"type":"string","format":"date-time","description":"When the Role was first granted to the Group","readOnly":true},"updatedOn":{"type":"string","format":"date-time","description":"When the Role was last granted to the Group or last modified","readOnly":true},"deletedOn":{"type":"string","format":"date-time","description":"Date Role was revoked from Group","readOnly":true},"roleAssignmentSource":{"type":"string","example":"FEDERATED","description":"Source of the Role's assignment to the AuthGroup","readOnly":true,"enum":["federated","group","unfederated"]}}},"AuthGroupV1":{"type":"object","required":["name"],"properties":{"id":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Unique id of the AuthGroup","readOnly":true},"name":{"type":"string","example":"Managers","description":"A human-readable name for the AuthGroup."},"createdOn":{"type":"string","format":"date-time","description":"When the AuthGroup was created","readOnly":true},"updatedOn":{"type":"string","format":"date-time","description":"When the AuthGroup was last modified","readOnly":true},"deletedOn":{"type":"string","format":"date-time","description":"When the AuthGroup was deleted","readOnly":true},"description":{"type":"string","example":"Admins for the system","description":"A description for the AuthGroup."},"groupCreationSource":{"type":"string","enum":["federated","unfederated"]},"sourceAclId":{"type":"string","example":"Source ACL ID","description":"An access control list for the AuthGroup."}}},"AuthUserContextV1":{"type":"object","properties":{"active":{"type":"boolean","example":false,"description":"active status of entity context assignment","readOnly":true},"entityId":{"type":"string","description":"Id of entity context for assignment","readOnly":true},"tenantId":{"type":"string","description":"Id of tenant context for assignment","readOnly":true}}},"AuthUserRoleAssignmentV1":{"type":"object","required":["roleContextualId"],"properties":{"entityId":{"type":"string","description":"Id of entity context for role assignment","readOnly":true},"groupId":{"type":"string","description":"Id of the group associated with the role assigned","readOnly":true},"productId":{"type":"string","description":"Id of product context for role assignment","readOnly":true},"roleAssignmentSource":{"type":"string","description":"Source of the role's assignment to the user","readOnly":true,"enum":["federated","group","unfederated"]},"roleContextualId":{"description":"Id, Product, Tenant, and Entity of the role","$ref":"#/definitions/ProductContextualIdV1"},"tenantId":{"type":"string","description":"Id of tenant context for role assignment","readOnly":true},"userId":{"type":"string","description":"Id of user for role assignment"},"userIds":{"type":"array","description":"Ids of users for bulk role assignment","items":{"type":"string"}}}},"AuthUserSecretV1":{"type":"object","properties":{"secret":{"type":"string"}}},"AuthUserV1":{"type":"object","required":["emailAddresses","username"],"properties":{"id":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Unique id of the AuthUser","readOnly":true},"username":{"type":"string","example":"bjjensen","description":"Unique identifier for the user, typically used by the user to directly authenticate to the service provider. This identifier MUST be unique across the service provider's entire set of Users"},"password":{"type":"string","description":"Password for the auth user"},"userType":{"type":"string","example":"Employee","description":"Used to identify the relationship between the organization and the user. Typical values used might be 'Contractor', 'Employee', 'Intern', 'Temp', 'External', and  'Unknown', but any value may be used.","enum":["EMPLOYEE","BOOTSTRAP","SVI","API-USER","NOW-SERVING"]},"active":{"type":"boolean","example":false,"description":"A boolean value indicating the user's administrative status. The definitive meaning of this  attribute is determined by the service provider."},"createdOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the AuthUser was created","readOnly":true},"addresses":{"type":"array","example":"[{ 'formatted': '555 Fake St., Apartment 1, Denver, CO 00000 USA', 'streetAddress': '555 Fake St., Apartment 1', 'locality': 'Denver', 'region': 'CO', 'postalCode': '00000', 'country': 'USA', 'type': 'home', 'preferred': true }]","description":"A physical mailing address for this user.","items":{"$ref":"#/definitions/AddressV1"}},"contexts":{"type":"array","description":"entities for the user and active status of entity","readOnly":true,"items":{"$ref":"#/definitions/AuthUserContextV1"}},"displayName":{"type":"string","example":"Babs Jensen","description":"The name of the user, suitable for display to end-users. Each user returned MAY include a non-empty displayName value. The name SHOULD be the full name of the AuthUser being described, if known (e.g., 'Babs Jensen' or 'Ms. Barbara J Jensen, III') but MAY be a username or handle, if that is all that is available (e.g., 'bjensen')."},"emailAddresses":{"type":"array","example":"[{ 'value': 'test@example.example', 'type': 'email', 'primary': 'true' }]","description":"Email addresses for the AuthUser.","items":{"$ref":"#/definitions/EmailAddressV1"}},"lastLogin":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the AuthUser last logged in","readOnly":true},"localeLanguageTag":{"type":"string","example":"en-US","description":"Used to indicate the AuthUser's default location for purposes of localizing such items as currency, date time format, or numerical representations."},"name":{"example":"{ 'formatted': 'Ms. Barbara J Jensen, III', 'familyName': 'Jensen', 'givenName': 'Barbara', 'middleName': 'Jane', 'honorificPrefix': 'Ms.', 'honorificSuffix': 'III' }","description":"The components of the user's name.","$ref":"#/definitions/NameV1"},"nickName":{"type":"string","example":"Babs","description":"The casual way to address the user in real life, e.g., 'Bob' or 'Bobby' instead of 'Robert'."},"phoneNumbers":{"type":"array","example":"[{ 'countryCode': '1', 'phoneNumber': '555-555-5555', 'extension': '#222', 'type': 'work', 'preferred': true }]","description":"Phone numbers for the user.","items":{"$ref":"#/definitions/PhoneNumberV1"}},"photos":{"type":"array","example":"[{ 'value': 'https://photos.example.com/profilephoto/72930000000Ccne/F', 'type': 'thumbnail', 'display': 'babsProfilePic', 'primary': 'true' }]","description":"A URI that is a URL that points to a resource location representing the user's image. The resource MUST be a file (e.g., a GIF, JPEG, or PNG image file) rather than a web page containing an image.","items":{"$ref":"#/definitions/PhotoAddressV1"}},"preferredLanguage":{"type":"string","example":"en-US","description":"Indicates the user's preferred written or spoken languages and is generally used for selecting a localized user interface. The value indicates the set of natural languages that are preferred."},"profileUrl":{"type":"string","example":"https://login.example.com/bjensen","description":"A URI that is a URL and that points to a location representing the user's online profile."},"realmName":{"type":"string","description":"An (optional, write once) identifier to indicate the namespace users from different sources."},"title":{"type":"string","example":"Tour Guide","description":"The user's title, such as 'Vice President'."},"updatedOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the AuthUser was last modified","readOnly":true},"zoneId":{"type":"string","example":"America/Los_Angeles","description":"The AuthUser's time zone, in IANA Time Zone database format [RFC6557], also known as the 'Olson' time zone database format [Olson-TZ] (e.g., 'America/Los_Angeles')."}}},"AuthenticationSettingsV1":{"type":"object","properties":{"mfaEnabled":{"type":"boolean","example":false,"description":"Boolean value indicating if MFA is required for users accessing this product/tenant/entity"},"createdOn":{"type":"string","format":"date-time","description":"instant these settings were created","readOnly":true},"updatedOn":{"type":"string","format":"date-time","description":"instant these settings were last modified","readOnly":true},"computed":{"description":"Computed settings for the requested context","readOnly":true,"$ref":"#/definitions/ComputedAuthenticationSettingsV1"}}},"AuthorizationInfoV1":{"type":"object","properties":{"entities":{"type":"object","additionalProperties":{"$ref":"#/definitions/EntityMorselV1"}},"entitlementAssignments":{"type":"object","additionalProperties":{"type":"string"}},"groupAssignments":{"type":"array","items":{"type":"string"}}}},"ChangePasswordRequestV1":{"type":"object","required":["currentPassword","newPassword","username"],"properties":{"currentPassword":{"type":"string","description":"Current password of the user"},"newPassword":{"type":"string","description":"New password for the user"},"username":{"type":"string","description":"Changes the password for this user","readOnly":true}}},"ComputedAuthenticationSettingsV1":{"type":"object","properties":{"mfaEnabled":{"type":"boolean","example":false,"description":"Computed Boolean value indicating if MFA is required for users accessing this product/tenant/entity","readOnly":true}}},"ContextualAuthInfoV1":{"type":"object","properties":{"authz":{"$ref":"#/definitions/AuthorizationInfoV1"},"user":{"$ref":"#/definitions/VertaforeUserV1"}}},"EmailAddressV1":{"type":"object","properties":{"value":{"type":"string","description":"Identifier, the email address","readOnly":true},"type":{"type":"string","example":"'work' or 'personal'","description":"A label indicating the email's type","readOnly":true},"preferred":{"type":"boolean","example":true,"description":"A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred phone number or primary phone number. The primary attribute value 'true' MUST appear no more than once.","readOnly":true}}},"EmptyResponseV1":{"type":"object","properties":{"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"EntityBranchV1":{"type":"object","required":["entityType","name"],"properties":{"id":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Unique id of the Entity","readOnly":true},"createdOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Entity was created","readOnly":true},"updatedOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Entity was last modified","readOnly":true},"name":{"type":"string","example":"Insurance West Division - Chicago","description":"Name of the Entity"},"parentEntityId":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Unique id of a parent Entity of this Entity"},"ancestors":{"type":"object","example":"{ '1234-1070-5707-e7h2-1dkl' : {'name' : 'Insurance Division Parent','parent_entity_id': '1234-1070-5707-e7h2-1dkl' }","description":"ancestors","additionalProperties":{"$ref":"#/definitions/EntityV1"}},"attributes":{"type":"array","description":"Attributes of the Entity","items":{"$ref":"#/definitions/AttributeV1"}},"descendants":{"type":"object","example":"{ '1234-1070-5707-e7h2-1dkl' : {'name' : 'Insurance Division Parent','parent_entity_id': '1234-1070-5707-e7h2-1dkl' }","description":"descendants","additionalProperties":{"$ref":"#/definitions/EntityV1"}},"emailAddress":{"type":"string","example":"example@gmail.com","description":"Email address of the Entity"},"locations":{"type":"array","description":"Location List of the entity","items":{"$ref":"#/definitions/LocationV1"}},"metadata":{"type":"object","example":"{'ams-web-ui': { 'office-type': 'shared' }}","description":"Map of custom metadata attached to the Entity. This can be any valid JSON value.","additionalProperties":{"$ref":"#/definitions/JsonNode"}},"webAddress":{"type":"string","example":"https://insurancewebsite.com/","description":"Website of the Entity"},"zoneId":{"type":"string","example":"America/Los_Angeles","description":"The Entity's time zone, in IANA Time Zone database format [RFC6557], also known as the 'Olson' time zone database format [Olson-TZ] (e.g., 'America/Los_Angeles')."},"entityType":{"type":"string","description":"Type of the Entity","enum":["AGENCY","CUSTOMER"]}},"description":"EntityBranch"},"EntityConcordanceV1":{"type":"object","required":["entityId","realmName","sourceEntityId","sourceType","tenantId"],"properties":{"entityId":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Id of the Entity"},"realmName":{"type":"string","description":"Displayable name of the Realm","readOnly":true},"sourceEntityId":{"type":"string","description":"Entity id of the source"},"sourceType":{"type":"string","example":"AMS360","description":"Type of Source","enum":["SAGITTA","AMS360","QQ"]},"tenantId":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Id of the Tenant"}}},"EntityMorselV1":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"parentEntityId":{"type":"string"},"type":{"type":"string"},"zoneId":{"type":"string"}}},"EntityV1":{"type":"object","required":["entityType","name"],"properties":{"id":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Unique id of the Entity","readOnly":true},"createdOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Entity was created","readOnly":true},"updatedOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Entity was last modified","readOnly":true},"name":{"type":"string","example":"Insurance West Division - Chicago","description":"Name of the Entity"},"entityType":{"type":"string","description":"Type of the Entity","enum":["AGENCY","CUSTOMER"]},"parentEntityId":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Unique id of the parent Entity of this Entity","readOnly":true},"attributes":{"type":"array","description":"Attributes of the Entity","items":{"$ref":"#/definitions/AttributeV1"}},"emailAddress":{"type":"string","example":"example@gmail.com","description":"Email address of the Entity"},"locations":{"type":"array","description":"Location List of the Entity","items":{"$ref":"#/definitions/LocationV1"}},"metadata":{"type":"object","example":"{'ams-web-ui': { 'office-type': 'shared' }}","description":"Map of custom metadata attached to the Entity. This can be any valid JSON value.","additionalProperties":{"$ref":"#/definitions/JsonNode"}},"webAddress":{"type":"string","example":"https://insurancewebsite.com/","description":"Website of the Entity"},"zoneId":{"type":"string","example":"America/Los_Angeles","description":"The Entity's time zone, in IANA Time Zone database format [RFC6557], also known as the 'Olson' time zone database format [Olson-TZ] (e.g., 'America/Los_Angeles')."}},"description":"Entity"},"ErrorResponseV1":{"type":"object","properties":{"message":{"type":"string"},"status":{"type":"integer","format":"int32"}}},"IDPUserMetaDataV1":{"type":"object","properties":{"id":{"type":"string","example":"b647a79e-b500-4640-a1bf-2aeb2efef379","description":"Unique id of the AuthUser","readOnly":true},"lastLoginTime":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"Last time this user logged in","readOnly":true}}},"IDPUserV1":{"type":"object","required":["password","username"],"properties":{"password":{"type":"string","example":"p4ssw0rd!","description":"Password of the user requesting a token"},"username":{"type":"string","example":"username","description":"Username of the user requesting a token"}}},"JsonNode":{"type":"object","properties":{"array":{"type":"boolean"},"bigDecimal":{"type":"boolean"},"bigInteger":{"type":"boolean"},"binary":{"type":"boolean"},"boolean":{"type":"boolean"},"containerNode":{"type":"boolean"},"double":{"type":"boolean"},"empty":{"type":"boolean"},"float":{"type":"boolean"},"floatingPointNumber":{"type":"boolean"},"int":{"type":"boolean"},"integralNumber":{"type":"boolean"},"long":{"type":"boolean"},"missingNode":{"type":"boolean"},"nodeType":{"type":"string","enum":["ARRAY","BINARY","BOOLEAN","MISSING","NULL","NUMBER","OBJECT","POJO","STRING"]},"null":{"type":"boolean"},"number":{"type":"boolean"},"object":{"type":"boolean"},"pojo":{"type":"boolean"},"short":{"type":"boolean"},"textual":{"type":"boolean"},"valueNode":{"type":"boolean"}}},"JsonPatch«PatchableAuthUserV1»":{"type":"object","description":"A JSON Patch (see http://jsonpatch.com/)"},"LimitOffsetPagingInfoV1":{"type":"object","properties":{"method":{"type":"string","description":"The method of paging that this pagingInfo contains","readOnly":true},"numberOfElements":{"type":"integer","format":"int32","description":"The number of data elements in this response.","readOnly":true},"page":{"type":"integer","format":"int32","description":"The page number of the response.","readOnly":true},"pageSize":{"type":"integer","format":"int32","description":"The page size of this response.","readOnly":true},"totalElements":{"type":"integer","format":"int32","description":"The total number of elements","readOnly":true},"totalPages":{"type":"integer","format":"int32","description":"The total number of pages, based on the pageSize and totalElements","readOnly":true}}},"LocationV1":{"type":"object","properties":{"addresses":{"type":"array","description":"List of Addresses for the Location","items":{"$ref":"#/definitions/AddressV1"}},"phoneNumbers":{"type":"array","description":"List of Phone numbers for the Location","items":{"$ref":"#/definitions/PhoneNumberV1"}}},"description":"Location"},"Map«string,boolean»":{"type":"object","additionalProperties":{"type":"boolean"}},"Map«string,object»":{"type":"object","additionalProperties":{"type":"object"}},"Map«string,string»":{"type":"object","additionalProperties":{"type":"string"}},"NameV1":{"type":"object","properties":{"familyName":{"type":"string","example":"Jensen","description":"The family name of the User, or last name in most Western languages (e.g., \"Jensen\" given the full name \"Ms. Barbara Jane Jensen, III\"). "},"formatted":{"type":"string","example":"Ms. Barbara Jane Jensen, III","description":"The full name, including all middle names, titles, and suffixes as appropriate, formatted for display (e.g., \"Ms. Barbara Jane Jensen, III\"."},"givenName":{"type":"string","example":"Barbara","description":"The given name of the User, or first name in most Western languages (e.g., \"Barbara\" given the full name \"Ms. Barbara Jane Jensen, III\")."},"honorificPrefix":{"type":"string","example":"Ms.","description":"The honorific prefix(es) of the User, or title in most Western languages (e.g., \"Ms.\" given the full name \"Ms. Barbara Jane Jensen, III\")."},"honorificSuffix":{"type":"string","example":"III","description":"The honorific suffix(es) of the User, or suffix in most Western languages (e.g., \"III\" given the full name \"Ms. Barbara Jane Jensen, III\")."},"middleName":{"type":"string","example":"Jane","description":"The middle name(s) of the User (e.g., \"Jane\" given the full name \"Ms. Barbara Jane Jensen, III\")."}}},"OAuthTokenV1":{"type":"object","required":["accessToken","expiresIn","refreshToken","tokenType"],"properties":{"accessToken":{"type":"string","description":"Access token"},"expiresIn":{"type":"integer","format":"int32","description":"Numbers of seconds before token expires"},"refreshToken":{"type":"string","description":"Refresh token"},"tokenType":{"type":"string","description":"Type of token"}}},"PagedResponseV1«AuthGroupMembershipV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/AuthGroupMembershipV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseV1«AuthGroupRoleAssignmentV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/AuthGroupRoleAssignmentV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseV1«AuthGroupV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/AuthGroupV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseV1«AuthUserRoleAssignmentV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/AuthUserRoleAssignmentV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseV1«AuthUserV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/AuthUserV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseV1«EntityConcordanceV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/EntityConcordanceV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseV1«ProductV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/ProductV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseV1«UserAndAssignedRolesV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/UserAndAssignedRolesV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PagedResponseWithRelatedObjectsV1«RoleV1,LimitOffsetPagingInfoV1»":{"type":"object","properties":{"content":{"type":"array","description":"The data elements requested","readOnly":true,"items":{"$ref":"#/definitions/RoleV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"paging":{"description":"The paging method used","readOnly":true,"$ref":"#/definitions/LimitOffsetPagingInfoV1"},"relatedObjects":{"type":"object","description":"A map of different kinds of objects related to the response. Each key in the map is a type of object that is referenced from the content of the response, e.g. a User or an Entity. Each value of the map is itself a map, but of the objects' IDs to the objects themselves so as to allow looking each object up via the ID that was provided in the content.","readOnly":true,"additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"PatchableAuthUserV1":{"type":"object","properties":{"userType":{"type":"string","example":"Employee","description":"Used to identify the relationship between the organization and the user. Typical values used might be 'Contractor', 'Employee', 'Intern', 'Temp', 'External', and  'Unknown', but any value may be used."},"addresses":{"type":"array","example":"[{ 'formatted': '555 Fake St., Apartment 1, Denver, CO 00000 USA', 'streetAddress': '555 Fake St., Apartment 1', 'locality': 'Denver', 'region': 'CO', 'postalCode': '00000', 'country': 'USA', 'type': 'home', 'preferred': true }]","description":"A physical mailing address for this user.","items":{"$ref":"#/definitions/AddressV1"}},"displayName":{"type":"string","example":"Babs Jensen","description":"The name of the user, suitable for display to end-users. Each user returned MAY include a non-empty displayName value. The name SHOULD be the full name of the AuthUser being  described, if known (e.g., 'Babs Jensen' or 'Ms. Barbara J Jensen, III') but MAY be a  username or handle, if that is all that is available (e.g., 'bjensen')."},"emailAddresses":{"type":"array","example":"[{ 'value': 'test@example.example', 'type': 'email', 'primary': 'true' }]","description":"Email addresses for the AuthUser.","items":{"$ref":"#/definitions/EmailAddressV1"}},"localeLanguageTag":{"type":"string","example":"en-US","description":"Used to indicate the AuthUser's default location for purposes of localizing such items as currency, date time format, or numerical representations."},"name":{"$ref":"#/definitions/NameV1"},"nickName":{"type":"string","example":"Babs","description":"The casual way to address the user in real life, e.g., 'Bob' or 'Bobby' instead of 'Robert'."},"phoneNumbers":{"type":"array","example":"[{ 'countryCode': '1', 'phoneNumber': '555-555-5555', 'extension': '#222', 'type': 'work', 'preferred': true }]","description":"Phone numbers for the user.","items":{"$ref":"#/definitions/PhoneNumberV1"}},"photos":{"type":"array","example":"[{ 'value': 'https://photos.example.com/profilephoto/72930000000Ccne/F', 'type': 'thumbnail', 'display': 'babsProfilePic', 'primary': 'true' }]","description":"A URI that is a URL that points to a resource location representing the user's image. The resource MUST be a file (e.g., a GIF, JPEG, or PNG image file) rather than a web page containing an image.","items":{"$ref":"#/definitions/PhotoAddressV1"}},"preferredLanguage":{"type":"string","example":"en-US","description":"Indicates the user's preferred written or spoken languages and is generally used for selecting a localized user interface. The value indicates the set of natural languages that are preferred."},"profileUrl":{"type":"string","example":"https://login.example.com/bjensen","description":"A URI that is a URL and that points to a location representing the user's online profile."},"title":{"type":"string","example":"Tour Guide","description":"The user's title, such as 'Vice President'."},"username":{"type":"string","example":"bjjensen","description":"Unique identifier for the user, typically used by the user to directly authenticate to the service provider. This identifier MUST be unique across the service provider's entire set of Users"},"zoneId":{"type":"string","example":"America/Los_Angeles","description":"The AuthUser's time zone, in IANA Time Zone database format [RFC6557], also known as the 'Olson' time zone database format [Olson-TZ] (e.g., 'America/Los_Angeles')."}}},"PhoneNumberV1":{"type":"object","properties":{"countryCode":{"type":"string","example":"1","description":"Country calling code"},"extension":{"type":"string","example":"4567","description":"Extension number"},"phoneNumber":{"type":"string","example":"5555555555","description":"Phone number"},"preferred":{"type":"boolean","example":true,"description":"Indicates a preferred Phone Number"},"type":{"type":"string","example":"Cell Phone","description":"Type of phone number"}},"description":"Standard Phone Number"},"PhotoAddressV1":{"type":"object","properties":{"value":{"type":"string","description":"Identifier, URI/address of the photo","readOnly":true},"type":{"type":"string","example":"'photo' or 'thumbnail'","description":"A label indicating the photo's function","readOnly":true},"display":{"type":"string","example":"My-Favority-Profile-Pic","description":"A human-readable name, primarily used for display purposes.","readOnly":true},"preferred":{"type":"boolean","example":true,"description":"A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred photo. The primary attribute value 'true' MUST appear no more than once.","readOnly":true}}},"ProductContextualIdV1":{"type":"object","properties":{"productId":{"type":"string","description":"ID of the Product in which the resource is stored"},"tenantId":{"type":"string","description":"ID of the Tenant in which the resource is stored"},"entityId":{"type":"string","description":"ID of the Entity in which the resource is stored"},"id":{"type":"string","description":"ID of the resource itself"}}},"ProductV1":{"type":"object","required":["id","internal","name"],"properties":{"createdOn":{"type":"string","format":"date-time","description":"When the Product was created","readOnly":true},"id":{"type":"string","example":"VERTAFORE","description":"Unique, human-readable id of the Product"},"updatedOn":{"type":"string","format":"date-time","description":"When the Product was last modified","readOnly":true},"name":{"type":"string","example":"AMS360","description":"A human-readable name for the Product."},"internal":{"type":"boolean","example":false,"description":"Whether the Product is intended to be used internally"}}},"RealmV1":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Displayable name of the Realm"},"description":{"type":"string","description":"Description of the Realm"},"updatedOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Realm was last modified","readOnly":true},"createdOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Realm was created","readOnly":true}}},"RoleV1":{"type":"object","required":["entityId","id","name","productId","tenantId"],"properties":{"createdOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Role was created","readOnly":true},"updatedOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the Role was last modified","readOnly":true},"productId":{"type":"string","example":"exampleProduct","description":"Id of product context for role","readOnly":true},"tenantId":{"type":"string","example":"exampleTenant","description":"Id of tenant context for role","readOnly":true},"entityId":{"type":"string","example":"exampleEntity","description":"Id of entity context for role","readOnly":true},"id":{"type":"string","example":"20b9b890-4f2f-4dea-8dad-48d34ee22dbe","description":"Unique GUID id of a role.","readOnly":true},"name":{"type":"string","example":"Administration","description":"Name of the role"},"description":{"type":"string","example":"Represents Admin Functionality","description":"Brief description of this Role's purpose"},"subRoleContextualIds":{"type":"array","example":"[{\"id\":\"some-subRole-id\",\"productId\":\"core\",\"tenantId\":\"some-tenant-id\",\"entityId\":\"some-entity-id\"}]","description":"List of Sub Role ContextualIds owned by this Role","items":{"$ref":"#/definitions/ProductContextualIdV1"}},"metadata":{"type":"object","example":"{'structure': { 'categories': [ { 'label': 'Customers', 'serviceRoles': [ 'Customers-View', 'Customers-Manage' ] 'subCategories': [] }] }}","description":"Map of custom metadata attached to the role. This can be any valid JSON value."},"subServiceRoles":{"type":"object","example":"{'example-service': ['admin'], 'other-example-service': ['viewThing', 'updateThing']}","description":"Map of service names to service role names for Service Rolesowned by this Role.","additionalProperties":{"type":"array","items":{"type":"string"}}},"tenantOnly":{"type":"boolean"}}},"ServiceRoleV1":{"type":"object","required":["name","serviceName"],"properties":{"name":{"type":"string","example":"admin","description":"Provided display name, unique in combination with `serviceName`"},"serviceName":{"type":"string","example":"example-service","description":"Service to which this Service Role belongs"},"description":{"type":"string","example":"Represents Admin Functionality","description":"Brief description of this Service Role's purpose"},"entitlements":{"type":"array","example":"['example-service.user.delete', 'example-service.user.read']","description":"List of Entitlements owned by this Service Role","items":{"type":"string"}},"subServiceRoles":{"type":"object","example":"{'example-service': ['admin'], 'other-example-service': ['viewThing', 'updateThing']}","description":"Map of service names to service role names for Service Roles owned by this Role.","additionalProperties":{"type":"array","items":{"type":"string"}}},"createdOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the ServiceRole was created","readOnly":true},"updatedOn":{"type":"string","format":"date-time","example":"1970-01-01T00:00:00.000Z","description":"When the ServiceRole was last modified","readOnly":true}}},"SingleResponseV1«AssignedRoleCountV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AssignedRoleCountV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«AuthGroupMembershipV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AuthGroupMembershipV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«AuthGroupRoleAssignmentV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AuthGroupRoleAssignmentV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«AuthGroupV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AuthGroupV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«AuthUserRoleAssignmentV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AuthUserRoleAssignmentV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«AuthUserSecretV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AuthUserSecretV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«AuthUserV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AuthUserV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«AuthenticationSettingsV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/AuthenticationSettingsV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«ContextualAuthInfoV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/ContextualAuthInfoV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«EntityBranchV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/EntityBranchV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«EntityConcordanceV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/EntityConcordanceV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«EntityV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/EntityV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«List«IDPUserMetaDataV1»»":{"type":"object","properties":{"content":{"type":"array","description":"The response data element","readOnly":true,"items":{"$ref":"#/definitions/IDPUserMetaDataV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«List«ServiceRoleV1»»":{"type":"object","properties":{"content":{"type":"array","description":"The response data element","readOnly":true,"items":{"$ref":"#/definitions/ServiceRoleV1"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«List»":{"type":"object","properties":{"content":{"type":"array","description":"The response data element","readOnly":true,"items":{"type":"object"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«Map«string,boolean»»":{"type":"object","properties":{"content":{"type":"object","description":"The response data element","readOnly":true,"additionalProperties":{"type":"boolean"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«Map«string,string»»":{"type":"object","properties":{"content":{"type":"object","description":"The response data element","readOnly":true,"additionalProperties":{"type":"string"}},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«OAuthTokenV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/OAuthTokenV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«ProductV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/ProductV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«RealmV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/RealmV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseV1«ServiceRoleV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/ServiceRoleV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"SingleResponseWithRelatedObjectsV1«RoleV1»":{"type":"object","properties":{"content":{"description":"The response data element","readOnly":true,"$ref":"#/definitions/RoleV1"},"error":{"description":"This field will contain information about the error if one occurred","readOnly":true,"$ref":"#/definitions/ErrorResponseV1"},"relatedObjects":{"type":"object","description":"A map of different kinds of objects related to the response. Each key in the map is a type of object that is referenced from the content of the response, e.g. a User or an Entity. Each value of the map is itself a map, but of the objects' IDs to the objects themselves so as to allow looking each object up via the ID that was provided in the content.","readOnly":true,"additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"requestId":{"type":"string","description":"The unique ID of this request.","readOnly":true},"spanId":{"type":"string","description":"The unique ID of the span.","readOnly":true},"traceId":{"type":"string","description":"The unique ID of the trace.","readOnly":true}}},"UserAndAssignedRolesV1":{"type":"object","properties":{"roles":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"user":{"$ref":"#/definitions/AuthUserV1"}}},"VertaforeUserV1":{"type":"object","properties":{"authenticatedUser":{"$ref":"#/definitions/VertaforeUserV1"},"displayName":{"type":"string"},"familyName":{"type":"string"},"givenName":{"type":"string"},"id":{"type":"string"}}}}}