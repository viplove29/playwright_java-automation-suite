/*
 * Authentication Service API
 * Authentication and Authorization
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package modelPackage;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import modelPackage.ProductContextualIdV1;

/**
 * AuthGroupMembershipV1
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-02T00:57:29.075-06:00")
public class AuthGroupMembershipV1 {
  @SerializedName("userId")
  private String userId = null;

  @SerializedName("productId")
  private String productId = null;

  @SerializedName("tenantId")
  private String tenantId = null;

  @SerializedName("entityId")
  private String entityId = null;

  @SerializedName("authGroupContextualId")
  private ProductContextualIdV1 authGroupContextualId = null;

  /**
   * Source of the AuthUser&#39;s Membership to the AuthGroup
   */
  @JsonAdapter(AuthGroupMembershipSourceEnum.Adapter.class)
  public enum AuthGroupMembershipSourceEnum {
    FEDERATED("federated"),
    
    UNFEDERATED("unfederated");

    private String value;

    AuthGroupMembershipSourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthGroupMembershipSourceEnum fromValue(String text) {
      for (AuthGroupMembershipSourceEnum b : AuthGroupMembershipSourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthGroupMembershipSourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthGroupMembershipSourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthGroupMembershipSourceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthGroupMembershipSourceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authGroupMembershipSource")
  private AuthGroupMembershipSourceEnum authGroupMembershipSource = null;

   /**
   * ID of the AuthUser
   * @return userId
  **/
  @ApiModelProperty(example = "b647a79e-b500-4640-a1bf-2aeb2efef379", value = "ID of the AuthUser")
  public String getUserId() {
    return userId;
  }

   /**
   * Product ID assignment context in which the AuthUser has membership in the AuthGroup.
   * @return productId
  **/
  @ApiModelProperty(value = "Product ID assignment context in which the AuthUser has membership in the AuthGroup.")
  public String getProductId() {
    return productId;
  }

   /**
   * Tenant ID assignment context in which the AuthUser has membership in the AuthGroup.
   * @return tenantId
  **/
  @ApiModelProperty(value = "Tenant ID assignment context in which the AuthUser has membership in the AuthGroup.")
  public String getTenantId() {
    return tenantId;
  }

   /**
   * Entity ID assignment context in which the AuthUser has membership in the AuthGroup.
   * @return entityId
  **/
  @ApiModelProperty(value = "Entity ID assignment context in which the AuthUser has membership in the AuthGroup.")
  public String getEntityId() {
    return entityId;
  }

   /**
   * Product, Tenant, Entity, ID of the AuthGroup
   * @return authGroupContextualId
  **/
  @ApiModelProperty(value = "Product, Tenant, Entity, ID of the AuthGroup")
  public ProductContextualIdV1 getAuthGroupContextualId() {
    return authGroupContextualId;
  }

   /**
   * Source of the AuthUser&#39;s Membership to the AuthGroup
   * @return authGroupMembershipSource
  **/
  @ApiModelProperty(example = "UNFEDERATED", value = "Source of the AuthUser's Membership to the AuthGroup")
  public AuthGroupMembershipSourceEnum getAuthGroupMembershipSource() {
    return authGroupMembershipSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthGroupMembershipV1 authGroupMembershipV1 = (AuthGroupMembershipV1) o;
    return Objects.equals(this.userId, authGroupMembershipV1.userId) &&
        Objects.equals(this.productId, authGroupMembershipV1.productId) &&
        Objects.equals(this.tenantId, authGroupMembershipV1.tenantId) &&
        Objects.equals(this.entityId, authGroupMembershipV1.entityId) &&
        Objects.equals(this.authGroupContextualId, authGroupMembershipV1.authGroupContextualId) &&
        Objects.equals(this.authGroupMembershipSource, authGroupMembershipV1.authGroupMembershipSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, productId, tenantId, entityId, authGroupContextualId, authGroupMembershipSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthGroupMembershipV1 {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    authGroupContextualId: ").append(toIndentedString(authGroupContextualId)).append("\n");
    sb.append("    authGroupMembershipSource: ").append(toIndentedString(authGroupMembershipSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

