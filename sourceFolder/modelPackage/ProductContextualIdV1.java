/*
 * Authentication Service API
 * Authentication and Authorization
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package modelPackage;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ProductContextualIdV1
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-02T00:57:29.075-06:00")
public class ProductContextualIdV1 {
  @SerializedName("productId")
  private String productId = null;

  @SerializedName("tenantId")
  private String tenantId = null;

  @SerializedName("entityId")
  private String entityId = null;

  @SerializedName("id")
  private String id = null;

  public ProductContextualIdV1 productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * ID of the Product in which the resource is stored
   * @return productId
  **/
  @ApiModelProperty(value = "ID of the Product in which the resource is stored")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public ProductContextualIdV1 tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * ID of the Tenant in which the resource is stored
   * @return tenantId
  **/
  @ApiModelProperty(value = "ID of the Tenant in which the resource is stored")
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }

  public ProductContextualIdV1 entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * ID of the Entity in which the resource is stored
   * @return entityId
  **/
  @ApiModelProperty(value = "ID of the Entity in which the resource is stored")
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public ProductContextualIdV1 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the resource itself
   * @return id
  **/
  @ApiModelProperty(value = "ID of the resource itself")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductContextualIdV1 productContextualIdV1 = (ProductContextualIdV1) o;
    return Objects.equals(this.productId, productContextualIdV1.productId) &&
        Objects.equals(this.tenantId, productContextualIdV1.tenantId) &&
        Objects.equals(this.entityId, productContextualIdV1.entityId) &&
        Objects.equals(this.id, productContextualIdV1.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, tenantId, entityId, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductContextualIdV1 {\n");
    
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

