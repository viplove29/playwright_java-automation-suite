/*
 * Authentication Service API
 * Authentication and Authorization
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package modelPackage;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import modelPackage.ProductContextualIdV1;

/**
 * AuthUserRoleAssignmentV1
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-02T00:57:29.075-06:00")
public class AuthUserRoleAssignmentV1 {
  @SerializedName("entityId")
  private String entityId = null;

  @SerializedName("groupId")
  private String groupId = null;

  @SerializedName("productId")
  private String productId = null;

  /**
   * Source of the role&#39;s assignment to the user
   */
  @JsonAdapter(RoleAssignmentSourceEnum.Adapter.class)
  public enum RoleAssignmentSourceEnum {
    FEDERATED("federated"),
    
    GROUP("group"),
    
    UNFEDERATED("unfederated");

    private String value;

    RoleAssignmentSourceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoleAssignmentSourceEnum fromValue(String text) {
      for (RoleAssignmentSourceEnum b : RoleAssignmentSourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RoleAssignmentSourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleAssignmentSourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoleAssignmentSourceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RoleAssignmentSourceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("roleAssignmentSource")
  private RoleAssignmentSourceEnum roleAssignmentSource = null;

  @SerializedName("roleContextualId")
  private ProductContextualIdV1 roleContextualId = null;

  @SerializedName("tenantId")
  private String tenantId = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("userIds")
  private List<String> userIds = null;

   /**
   * Id of entity context for role assignment
   * @return entityId
  **/
  @ApiModelProperty(value = "Id of entity context for role assignment")
  public String getEntityId() {
    return entityId;
  }

   /**
   * Id of the group associated with the role assigned
   * @return groupId
  **/
  @ApiModelProperty(value = "Id of the group associated with the role assigned")
  public String getGroupId() {
    return groupId;
  }

   /**
   * Id of product context for role assignment
   * @return productId
  **/
  @ApiModelProperty(value = "Id of product context for role assignment")
  public String getProductId() {
    return productId;
  }

   /**
   * Source of the role&#39;s assignment to the user
   * @return roleAssignmentSource
  **/
  @ApiModelProperty(value = "Source of the role's assignment to the user")
  public RoleAssignmentSourceEnum getRoleAssignmentSource() {
    return roleAssignmentSource;
  }

  public AuthUserRoleAssignmentV1 roleContextualId(ProductContextualIdV1 roleContextualId) {
    this.roleContextualId = roleContextualId;
    return this;
  }

   /**
   * Id, Product, Tenant, and Entity of the role
   * @return roleContextualId
  **/
  @ApiModelProperty(required = true, value = "Id, Product, Tenant, and Entity of the role")
  public ProductContextualIdV1 getRoleContextualId() {
    return roleContextualId;
  }

  public void setRoleContextualId(ProductContextualIdV1 roleContextualId) {
    this.roleContextualId = roleContextualId;
  }

   /**
   * Id of tenant context for role assignment
   * @return tenantId
  **/
  @ApiModelProperty(value = "Id of tenant context for role assignment")
  public String getTenantId() {
    return tenantId;
  }

  public AuthUserRoleAssignmentV1 userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Id of user for role assignment
   * @return userId
  **/
  @ApiModelProperty(value = "Id of user for role assignment")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public AuthUserRoleAssignmentV1 userIds(List<String> userIds) {
    this.userIds = userIds;
    return this;
  }

  public AuthUserRoleAssignmentV1 addUserIdsItem(String userIdsItem) {
    if (this.userIds == null) {
      this.userIds = new ArrayList<String>();
    }
    this.userIds.add(userIdsItem);
    return this;
  }

   /**
   * Ids of users for bulk role assignment
   * @return userIds
  **/
  @ApiModelProperty(value = "Ids of users for bulk role assignment")
  public List<String> getUserIds() {
    return userIds;
  }

  public void setUserIds(List<String> userIds) {
    this.userIds = userIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthUserRoleAssignmentV1 authUserRoleAssignmentV1 = (AuthUserRoleAssignmentV1) o;
    return Objects.equals(this.entityId, authUserRoleAssignmentV1.entityId) &&
        Objects.equals(this.groupId, authUserRoleAssignmentV1.groupId) &&
        Objects.equals(this.productId, authUserRoleAssignmentV1.productId) &&
        Objects.equals(this.roleAssignmentSource, authUserRoleAssignmentV1.roleAssignmentSource) &&
        Objects.equals(this.roleContextualId, authUserRoleAssignmentV1.roleContextualId) &&
        Objects.equals(this.tenantId, authUserRoleAssignmentV1.tenantId) &&
        Objects.equals(this.userId, authUserRoleAssignmentV1.userId) &&
        Objects.equals(this.userIds, authUserRoleAssignmentV1.userIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, groupId, productId, roleAssignmentSource, roleContextualId, tenantId, userId, userIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthUserRoleAssignmentV1 {\n");
    
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    roleAssignmentSource: ").append(toIndentedString(roleAssignmentSource)).append("\n");
    sb.append("    roleContextualId: ").append(toIndentedString(roleContextualId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userIds: ").append(toIndentedString(userIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

