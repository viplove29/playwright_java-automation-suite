/**
* {{#description}}{{.}}{{/description}}{{^description}}{{classname}}{{/description}}
*/{{#description}}
  @ApiModel(description = "{{{description}}}"){{/description}}
{{>generatedAnnotation}}
@JsonIgnoreProperties(ignoreUnknown = true)
public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}}{{^parent}}{{#hateoas}}extends RepresentationModel<{{classname}}> {{/hateoas}}{{/parent}} {{#serializableModel}}implements Serializable{{/serializableModel}} {

{{#vars}}
  {{#isEnum}}
    {{^isContainer}}
      {{>enumClass}}
    {{/isContainer}}
    {{#isContainer}}
      {{#mostInnerItems}}
        {{>enumClass}}
      {{/mostInnerItems}}
    {{/isContainer}}
  {{/isEnum}}
  {{#jackson}}
      @JsonInclude(NON_NULL)
    @JsonProperty("{{baseName}}"){{#withXml}}
      @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace="{{xmlNamespace}}", {{/xmlNamespace}}localName = "{{#xmlName}}{{xmlName}}{{/xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}"){{/withXml}}
  {{/jackson}}
  {{#gson}}
    @SerializedName("{{baseName}}")
  {{/gson}}
  {{#isContainer}}
    private {{>nullableDataType}} {{name}} = {{#isNullable}}JsonNullable.undefined(){{/isNullable}}{{^isNullable}}{{#required}}{{{defaultValue}}}{{/required}}{{^required}}null{{/required}}{{/isNullable}};
  {{/isContainer}}
  {{^isContainer}}
    {{#isDate}}
        @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
    {{/isDate}}
    {{#isDateTime}}

    {{/isDateTime}}
    private {{>nullableDataType}} {{name}}{{#isNullable}} = JsonNullable.undefined(){{/isNullable}}{{^isNullable}}{{#defaultValue}} = {{{.}}}{{/defaultValue}}{{/isNullable}};
  {{/isContainer}}

{{/vars}}
{{#vars}}
  public {{classname}} {{name}}({{>nullableDataType}} {{name}}) {
  this.{{name}} = {{#isNullable}}JsonNullable.of({{name}}){{/isNullable}}{{^isNullable}}{{name}}{{/isNullable}};
  return this;
  }
  {{#isListContainer}}

    public {{classname}} add{{nameInCamelCase}}Item({{{items.datatypeWithEnum}}} {{name}}Item) {
    {{^required}}
      if (this.{{name}} == null{{#isNullable}} || !this.{{name}}.isPresent(){{/isNullable}}) {
      this.{{name}} = {{#isNullable}}JsonNullable.of({{{defaultValue}}}){{/isNullable}}{{^isNullable}}{{{defaultValue}}}{{/isNullable}};
      }
    {{/required}}
    this.{{name}}{{#isNullable}}.get(){{/isNullable}}.add({{name}}Item);
    return this;
    }
  {{/isListContainer}}
  {{#isMapContainer}}

    public {{classname}} put{{nameInCamelCase}}Item(String key, {{{items.datatypeWithEnum}}} {{name}}Item) {
    {{^required}}
      if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
      }
    {{/required}}
    this.{{name}}.put(key, {{name}}Item);
    return this;
    }
  {{/isMapContainer}}

  /**
  {{#description}}
    * {{{description}}}
  {{/description}}
  {{^description}}
    * Get {{name}}
  {{/description}}
  {{#minimum}}
    * minimum: {{minimum}}
  {{/minimum}}
  {{#maximum}}
    * maximum: {{maximum}}
  {{/maximum}}
  * @return {{name}}
  */
  {{#vendorExtensions.x-extra-annotation}}
    {{{vendorExtensions.x-extra-annotation}}}
  {{/vendorExtensions.x-extra-annotation}}
  @ApiModelProperty({{#example}}example = "{{{example}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = "{{{description}}}")
  public {{>nullableDataType}} {{getter}}() {
  return {{name}};
  }

  public void {{setter}}({{>nullableDataType}} {{name}}) {
  this.{{name}} = {{name}};
  }

{{/vars}}
}