package {{package}};

{{> import_statements}}

{{#operations}}
  public class {{classname}} {
  String BASE_PATH_FULL = "{{basePath}}";

  {{#operation}}
public Performable {{operationId}}({{>method_parameters}}) {
{{>post_body}}
  final HashMap<String, String> queryParams = new HashMap<String, String>();
  final HttpHeaders headerParams = new HttpHeaders();
  final HashMap<String, Object> formParams = new HashMap<String, Object>();
{{>query_parameters}}
{{>form_parameters}}
{{>consumes}}
    return Task.where("{0}  {{summary}}", actor -> {
{{>path_parameters}}
String path = UriComponentsBuilder.fromPath("{{{path}}}"){{#hasPathParams}}.buildAndExpand(uriVariables){{/hasPathParams}}{{^hasPathParams}}.build(){{/hasPathParams}}.toUriString();

    CallTitanApi
    .asActorUsingService(actor)
      .contentType(contentTypes.toString())
      .queryParams(queryParams){{#allParams}}{{#isBodyParam}}.body(postBody){{/isBodyParam}}{{/allParams}}
      .formParams(formParams)
.{{httpMethod}}(path);
{{#lowercase}}{{httpMethod}}{{/lowercase}}
    });
    }
  {{/operation}}
{{/operations}}
}
