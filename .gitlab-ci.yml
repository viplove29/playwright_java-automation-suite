variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

stages:
  - build
  - deploy

build:
  stage: build
  image: openjdk:11-jdk-slim
  except:
    - triggers
  script:
    - chmod +x gradlew
    - ./gradlew --build-cache build testClasses -x test
  cache:
    key: "gradle"
    paths:
      - .gradle
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - build/libs
      - build/classes
      - build/resources

codequality:
  stage: build
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:dind
  script:
    - setup_docker
    - codeclimate_html
  artifacts:
    expire_in: 1 week
    paths: [codeclimate.html]
  except:
    - triggers

deploy:
  stage: deploy
  image: openjdk:11-jdk-slim
  script:
    - echo "nexusUsername = ${NEXUS_USERNAME}" > ${GRADLE_USER_HOME}/gradle.properties
    - echo "nexusPassword = ${NEXUS_PASSWORD}" >> ${GRADLE_USER_HOME}/gradle.properties
    - ./gradlew --build-cache uploadArchive
    - rm ${GRADLE_USER_HOME}/gradle.properties
  only:
    - master
  cache:
    key: "gradle"
    policy: pull
    paths:
      - .gradle

.vertafore_scripts: &vertafore_scripts |
  # Vertafore functions
  [[ "$TRACE" ]] && set -x
  function codeclimate_html() {
    cc_opts="--env CODECLIMATE_CODE="$PWD" \
             --volume "$PWD":/code \
             --volume /var/run/docker.sock:/var/run/docker.sock \
             --volume /tmp/cc:/tmp/cc"

    docker run ${cc_opts} codeclimate/codeclimate:0.69.0 init
    docker run ${cc_opts} codeclimate/codeclimate:0.69.0 analyze -f html > codeclimate.html
  }

  function setup_docker() {
    if ! docker info &>/dev/null; then
      if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
        export DOCKER_HOST='tcp://localhost:2375'
      fi
    fi
  }


before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - *vertafore_scripts