variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  ENVIRONMENT_BASE_URI: "https://api.dev.titan.v4af.com"

image: openjdk:11-jdk-slim

stages:
  - project checks
  - build
  - test
  - report
 

build:
  tags: [Docker]
  stage: build
  image: openjdk:11-jdk-slim
  except:
    - triggers
    - schedules
  script:
    - $JAVA_HOME/bin/keytool -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -trustcacerts -importcert -alias qa_cert -file lib/certificates/QA.cer
    - chmod +x gradlew
    - ./gradlew generateSwaggerCode --stacktrace
    - ./gradlew spotlessJavaApply
    - ./gradlew addGeneratedCodeToSourceSets
    - ./gradlew --build-cache build testClasses -x test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .gradle
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - build/libs
      - build/classes
      - build/resources

spotless:
  stage: project checks
  image: openjdk:11-jdk-slim
  script:
    - ./gradlew spotlessJavaCheck
  only:
    refs:
      - merge_requests
    changes:
      - "**/*.java"

# .after_tests:
#   after_script:
#     - sed -i '1d' target/site/serenity/summary.txt; cat target/site/serenity/summary.txt; printf "\n\n================================================================\n%s\n\t\t\e[1;33m%s\e[0m\n================================================================\n\n" "To view full report, download Gitlab artifacts, unzip, and open" "target/site/serenity/index.html"; grep 'FAILURE\|ERROR' target/site/serenity/results.csv | awk -F"," '{print($3,$2)}' | sed 's/"//g' > output.txt; grep --color=always 'FAILURE' output.txt;  export GREP_COLOR='1;35'; grep --color=always 'ERROR' output.txt;
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     policy: pull
#     paths:
#       - .gradle
#   artifacts:
#     expire_in: 6 mos
#     when: always
#     paths:
#       - target

# functional-tests-for-commits:
#   extends: .after_tests
#   stage: test
#   except:
#     - triggers
#     - schedules
#   script:
#     - chmod +x gradlew
#     - ./gradlew --build-cache test --continue --quiet -Dbase.service.uri=${ENVIRONMENT_BASE_URI} --tests ${RUNNER_AGAINST_BUILDS} -Dauthgen.admin.username=${TITANAUTHGEN_USERNAME} -Dauthgen.admin.password=${TITANAUTHGEN_PASSWORD} --debug

# functional-tests-against-builds:
#   extends: .after_tests
#   stage: test
#   only:
#     - triggers
#   script:
#     - chmod +x gradlew
#     - ./gradlew --build-cache test --continue --quiet -Dbase.service.uri=${ENVIRONMENT_BASE_URI} -Dservice.branches=${SERVICE_BRANCHES} --tests ${RUNNER_AGAINST_BUILDS} -Dauthgen.admin.username=${TITANAUTHGEN_USERNAME} -Dauthgen.admin.password=${TITANAUTHGEN_PASSWORD}

# functional-tests-schedule:
#   extends: .after_tests
#   stage: test
#   only:
#     - schedules
#   script:
#     - chmod +x gradlew
#     - ./gradlew --build-cache test --continue --quiet -Dbase.service.uri=${ENVIRONMENT_BASE_URI} --tests ${RUNNER_SCHEDULED} -Dqtest.username=${QTEST_USERNAME} -Dauthgen.admin.username=${TITANAUTHGEN_USERNAME} -Dauthgen.admin.password=${TITANAUTHGEN_PASSWORD}

# report-to-qtest:
#   stage: report
#   only:
#     - master
#   script:
#     - report_to_qtest_if_test_against_master
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     paths:
#       - .gradle


.vertafore_scripts: &vertafore_scripts |
  # Vertafore functions
  [[ "$TRACE" ]] && set -x
  function codeclimate_html() {
    cc_opts="--env CODECLIMATE_CODE="$PWD" \
             --volume "$PWD":/code \
             --volume /var/run/docker.sock:/var/run/docker.sock \
             --volume /tmp/cc:/tmp/cc"

    docker run ${cc_opts} codeclimate/codeclimate:0.69.0 init
    docker run ${cc_opts} codeclimate/codeclimate:0.69.0 analyze -f html > codeclimate.html
  }

  function setup_docker() {
    if ! docker info &>/dev/null; then
      if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
        export DOCKER_HOST='tcp://localhost:2375'
      fi
    fi
  }

  function report_to_qtest_if_test_against_master() {
    if [[ "$COMMIT_NAME" == "master" || -z "$COMMIT_NAME" ]]; then
      ./gradlew --build-cache qtestsync -Dqtest.username=${QTEST_USERNAME} -Dqtest.password=${QTEST_PASSWORD} -Dqtest.domain=${QTEST_DOMAIN} -Dqtest.pid=${QTEST_PID} -Dqtest.cycleId=${QTEST_CYCLEID}
    else
      echo "Not reporting to qTest - test is against branch other than master"
    fi
  }


before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - *vertafore_scripts